//first rust program


/*
MultiLine comments
like C
*/



//println! is a macro in rust
//macros are created using macro_rules! macro!! :
macro_rules! say_hello{
    //() indicated the macro takes no argument
    () => {
        println!("Hello!");
    };

}

macro_rules! create_function{
    //This macro takes an argument of designator 'ident' and
    //Creates a function named $func_name.
    //The 'ident' designator is used for variable/function names.
    ($func_name:ident)=>{
        fn $func_name() {
            //the stringify! macro converts an ident into a string
            println!("You Called {:?}()",stringify!($func_name));
        }

    };

}

create_function!(foo);
create_function!(bar);

macro_rules! print_result{
    //the 'expr' designator is used for expressions
    ($expression:expr) => {
        println!("{:?} = {:?}",
            stringify!($expression) , $expression);

    };



}

macro_rules! test{
    ($left:expr; and $right:expr) => {
        println!("{:?} and {:?} is {:?}" , stringify!($left) , stringify!($right) , $left && $right);
    };
    ($left:expr; or $right:expr) => {
        println!("{:?} or {:?} is {:?}",stringify!($left) , stringify!($right) , $left || $right);
    };
}




fn main(){
    foo();
    bar();

    println!("Hello World!");
    say_hello!();
    //Blocks are expressions too!    
    print_result!({
        let x = 1u32;
        x*x+2*x-1
    });
    test!(1==1; and 2==2);
    test!(1==2; or 2==2);

}
